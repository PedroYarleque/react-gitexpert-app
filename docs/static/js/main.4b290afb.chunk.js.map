{"version":3,"sources":["components/AddCategory.tsx","helpers/getGifts.tsx","components/GifGridItem.tsx","components/GifGrid.tsx","hooks/useFetchGifs.tsx","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNASaA,EAAc,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,cAE3B,EAAoCC,mBAAiB,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAQ,OAAGP,GAAH,mBAAiBO,OACvCN,EAAc,MAMlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCZdG,EAAO,uCAAG,WAAQL,GAAR,uBAAAM,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUR,GAF9C,+DAGAS,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCMPO,EAAc,SAAC,GAA6B,IAA1BH,EAAyB,EAAzBA,MAAOV,EAAkB,EAAlBA,IAIlC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCNHO,EAAU,SAAC,GAAuB,IAAtBxB,EAAqB,EAArBA,SAErB,ECRwB,SAACA,GAC3B,MAA0BR,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRvB,EAAQL,GAAU6B,MAAK,SAAAC,GACnBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEZ,UAGR,CAACzB,IAEG0B,EDVqBM,CAAahC,GAA/BY,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACI,qCACI,6BAAMzB,IAEJyB,EAAU,2CAAoB,KAEhC,qBAAKJ,UAAU,YAAf,SAGQT,EAAKE,KAAK,SAAEC,GAAF,OACN,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEpBzBiB,EAAe,WAE1B,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACG2C,EAAWpB,KAAK,SAACd,EAAUmC,GAAX,OACf,cAAC,EAAD,CAEEnC,SAAUA,GADLmC,Y,MClBjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b290afb.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction, useState } from \"react\";\r\n\r\ninterface Props{\r\n    setCategories: Dispatch<SetStateAction<string[]>>;\r\n}\r\n\r\ntype ChangeHandle = React.ChangeEvent<HTMLInputElement>;\r\ntype FormHandle = React.FormEvent<HTMLFormElement>;\r\n\r\nexport const AddCategory = ({setCategories}: Props) => {\r\n\r\n  const [inputValue, setInputValue] = useState<string>(\"\");\r\n\r\n  const handleInputChange = (e: ChangeHandle) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormHandle) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length>2){\r\n        setCategories(category=>[inputValue,...category,]);\r\n        setInputValue('');\r\n      }\r\n      \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n","import { Datum } from \"../interfaces/GiftResponse\";\r\n\r\nexport const getGifs = async ( category: string ) => { \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=OOeJJq61yhRgLNenhNqY1ckiGhaQahi0`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( (img: Datum )  => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\ninterface Props{\r\n    id: string;\r\n    title: string;\r\n    url: string;\r\n}\r\n\r\nexport const GifGridItem = ( { title, url }: Props ) => {\r\n\r\n    // console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { Gift } from '../interfaces/Gift';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\ninterface Props{\r\n    category: string;\r\n}\r\n\r\nexport const GifGrid = ({category}: Props) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading ? <p>Loading...</p> : null}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map( ( img : Gift ) => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifs = (category: string) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n        setTimeout(() => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n              });\r\n          }, 3000);\r\n      \r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  //   const handleAdd = () => {\r\n  //     setCategories([...categories, \"Naruto\"]);\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n      <ol>\r\n        {categories.map( (category, i) => (\r\n          <GifGrid \r\n            key={i}\r\n            category={category}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}